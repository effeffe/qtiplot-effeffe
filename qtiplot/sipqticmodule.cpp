/*
 * Module code.
 *
 * Generated by SIP 4.19.20
 */

#include "sipAPIqti.h"

#line 29 "/usr/share/sip/PyQt4/QtCore/qobject.sip"
#include <qobject.h>
#line 12 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 15 "./sipqticmodule.cpp"
#line 368 "/usr/share/sip/PyQt4/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 18 "./sipqticmodule.cpp"
#line 351 "/usr/share/sip/PyQt4/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 21 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtCore/qmimedata.sip"
#include <qmimedata.h>
#line 24 "./sipqticmodule.cpp"
#line 265 "/usr/share/sip/PyQt4/QtCore/qvariant.sip"
#include <qvariant.h>
#line 27 "./sipqticmodule.cpp"
#line 98 "/usr/share/sip/PyQt4/QtCore/qurl.sip"
#include <qurl.h>
#line 30 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 33 "./sipqticmodule.cpp"
#line 52 "/usr/share/sip/PyQt4/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 36 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtCore/qsize.sip"
#include <qsize.h>
#line 39 "./sipqticmodule.cpp"
#line 252 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 42 "./sipqticmodule.cpp"
#line 347 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 45 "./sipqticmodule.cpp"
#line 474 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 48 "./sipqticmodule.cpp"
#line 505 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 51 "./sipqticmodule.cpp"
#line 524 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 54 "./sipqticmodule.cpp"
#line 548 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 57 "./sipqticmodule.cpp"
#line 561 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 60 "./sipqticmodule.cpp"
#line 574 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 63 "./sipqticmodule.cpp"
#line 618 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 66 "./sipqticmodule.cpp"
#line 403 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 69 "./sipqticmodule.cpp"
#line 854 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 72 "./sipqticmodule.cpp"
#line 781 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 75 "./sipqticmodule.cpp"
#line 765 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 78 "./sipqticmodule.cpp"
#line 792 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 81 "./sipqticmodule.cpp"
#line 739 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 84 "./sipqticmodule.cpp"
#line 596 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 87 "./sipqticmodule.cpp"
#line 607 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 90 "./sipqticmodule.cpp"
#line 647 "/usr/share/sip/PyQt4/QtGui/qevent.sip"
#include <qevent.h>
#line 93 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 96 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtGui/qpalette.sip"
#include <qpalette.h>
#line 99 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtGui/qfont.sip"
#include <qfont.h>
#line 102 "./sipqticmodule.cpp"
#line 648 "src/scripting/qti.sip"
#include <qwt_symbol.h>
#include "ColorButton.h"
#line 106 "./sipqticmodule.cpp"
#line 26 "/usr/share/sip/PyQt4/QtGui/qmenu.sip"
#include <qmenu.h>
#line 109 "./sipqticmodule.cpp"
#line 27 "/usr/share/sip/PyQt4/QtCore/qstring.sip"
#include <qstring.h>
#line 112 "./sipqticmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_qti[] = {
    'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', ':', ':', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', 'M', 'e', 't', 'h', 'o', 'd', 0,
    'I', 'n', 't', 'e', 'g', 'r', 'a', 't', 'i', 'o', 'n', ':', ':', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', 'M', 'e', 't', 'h', 'o', 'd', 0,
    'a', 's', 'p', 'e', 'c', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 'A', 'b', 'o', 'u', 't', 'T', 'o', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'C', 'o', 'r', 'e', '.', 'p', 'y', 'q', 't', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'M', 'i', 'm', 'e', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'm', 'o', 'o', 't', 'h', 'F', 'i', 'l', 't', 'e', 'r', ':', ':', 'S', 'm', 'o', 'o', 't', 'h', 'M', 'e', 't', 'h', 'o', 'd', 0,
    'U', 'n', 's', 'c', 'a', 'l', 'e', 'd', 'L', 'e', 'v', 'e', 'n', 'b', 'e', 'r', 'g', 'M', 'a', 'r', 'q', 'u', 'a', 'r', 'd', 't', 0,
    'M', 'u', 'l', 't', 'i', 'P', 'e', 'a', 'k', 'F', 'i', 't', ':', ':', 'P', 'e', 'a', 'k', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'S', 'c', 'a', 'l', 'e', 'd', 'L', 'e', 'v', 'e', 'n', 'b', 'e', 'r', 'g', 'M', 'a', 'r', 'q', 'u', 'a', 'r', 'd', 't', 0,
    'a', 's', 'p', 'e', 'c', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'M', 'y', 'W', 'i', 'd', 'g', 'e', 't', ':', ':', 'C', 'a', 'p', 't', 'i', 'o', 'n', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    'a', 's', 'p', 'e', 'c', 't', 'A', 'b', 'o', 'u', 't', 'T', 'o', 'B', 'e', 'R', 'e', 'm', 'o', 'v', 'e', 'd', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'A', 'c', 't', 'i', 'v', 'a', 't', 'i', 'o', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'F', 'F', 'T', 'F', 'i', 'l', 't', 'e', 'r', ':', ':', 'F', 'i', 'l', 't', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'g', 'e', 'n', 'e', 'r', 'a', 't', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 'L', 'i', 's', 't', 0,
    'i', 'n', 's', 'e', 'r', 't', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'r', 'i', 'c', 'C', 'u', 'r', 'v', 'e', 0,
    'c', 'a', 'n', 'I', 'n', 's', 'e', 'r', 't', 'F', 'r', 'o', 'm', 'M', 'i', 'm', 'e', 'D', 'a', 't', 'a', 0,
    'm', 'o', 'u', 's', 'e', 'D', 'o', 'u', 'b', 'l', 'e', 'C', 'l', 'i', 'c', 'k', 'E', 'v', 'e', 'n', 't', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'w', 't', 'P', 'l', 'o', 't', 'C', 'u', 'r', 'v', 'e', '*', '>', 0,
    's', 'e', 't', 'M', 'a', 'x', 'i', 'm', 'u', 'm', 'I', 't', 'e', 'r', 'a', 't', 'i', 'o', 'n', 's', 0,
    's', 'e', 't', 'A', 'x', 'i', 's', 'N', 'u', 'm', 'e', 'r', 'i', 'c', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'a', 's', 'p', 'e', 'c', 't', 'A', 'b', 'o', 'u', 't', 'T', 'o', 'B', 'e', 'A', 'd', 'd', 'e', 'd', 0,
    'n', 'o', 'r', 'm', 'a', 'l', 'i', 'z', 'e', 'A', 'm', 'p', 'l', 'i', 't', 'u', 'd', 'e', 's', 0,
    'i', 'n', 's', 'e', 'r', 't', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'C', 'u', 'r', 'v', 'e', 0,
    's', 'e', 't', 'N', 'u', 'm', 'e', 'r', 'i', 'c', 'P', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    's', 'e', 't', 'P', 'e', 'a', 'k', 'C', 'u', 'r', 'v', 'e', 's', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'O', 'u', 't', 'p', 'u', 't', 'P', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    'g', 'u', 'e', 's', 's', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'V', 'a', 'l', 'u', 'e', 's', 0,
    's', 'e', 't', 'L', 'a', 'y', 'e', 'r', 'C', 'a', 'n', 'v', 'a', 's', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'P', 'l', 'o', 't', 'D', 'e', 's', 'i', 'g', 'n', 'a', 't', 'i', 'o', 'n', 0,
    'i', 'n', 's', 'e', 'r', 't', 'F', 'r', 'o', 'm', 'M', 'i', 'm', 'e', 'D', 'a', 't', 'a', 0,
    's', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'r', 0,
    'f', 'o', 'c', 'u', 's', 'N', 'e', 'x', 't', 'P', 'r', 'e', 'v', 'C', 'h', 'i', 'l', 'd', 0,
    'N', 'e', 'l', 'd', 'e', 'r', 'M', 'e', 'a', 'd', 'S', 'i', 'm', 'p', 'l', 'e', 'x', 0,
    'A', 'p', 'p', 'l', 'i', 'c', 'a', 't', 'i', 'o', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    's', 'e', 't', 'A', 'u', 't', 'o', 's', 'c', 'a', 'l', 'e', 'F', 'o', 'n', 't', 's', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'A', 'u', 't', 'o', 's', 'c', 'a', 'l', 'i', 'n', 'g', 0,
    'd', 'e', 's', 't', 'r', 'o', 'y', 'S', 'u', 'b', 'W', 'i', 'n', 'd', 'o', 'w', 's', 0,
    'm', 'o', 'u', 's', 'e', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 'n', 'd', 'e', 'r', 'S', 'i', 'g', 'n', 'a', 'l', 'I', 'n', 'd', 'e', 'x', 0,
    'Q', 'L', 'i', 's', 't', '<', 'M', 'y', 'W', 'i', 'd', 'g', 'e', 't', '*', '>', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', '>', 0,
    's', 'e', 't', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'T', 'a', 'b', 'l', 'e', 0,
    's', 'h', 'i', 'f', 't', 'F', 'r', 'e', 'q', 'u', 'e', 'n', 'c', 'i', 'e', 's', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'P', 'e', 'a', 'k', 'C', 'u', 'r', 'v', 'e', 's', 0,
    'c', 'o', 'v', 'a', 'r', 'i', 'a', 'n', 'c', 'e', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'g', 'e', 'n', 'e', 'r', 'a', 't', 'e', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'V', 'a', 'l', 'u', 'e', 's', 0,
    's', 'e', 't', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'C', 'u', 'r', 'v', 'e', 0,
    'A', 's', 's', 'o', 'c', 'i', 'a', 't', 'e', 'd', 'E', 'r', 'r', 'o', 'r', 's', 0,
    'F', 'i', 't', ':', ':', 'E', 'r', 'r', 'o', 'r', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    's', 'w', 'i', 't', 'c', 'h', 'T', 'o', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'i', 'n', 's', 'e', 'r', 't', 'P', 'o', 'l', 'a', 'r', 'C', 'u', 'r', 'v', 'e', 0,
    'Q', 'w', 't', 'S', 'y', 'm', 'b', 'o', 'l', ':', ':', 'S', 't', 'y', 'l', 'e', 0,
    's', 'e', 't', 'C', 'a', 'p', 't', 'i', 'o', 'n', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    'r', 'e', 'p', 'l', 'a', 'c', 'e', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 's', 0,
    'd', 'e', 's', 't', 'r', 'o', 'y', 'O', 'l', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    's', 'c', 'r', 'o', 'l', 'l', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'B', 'y', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'Q', 'u', 'e', 'r', 'y', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'P', 'y', 't', 'h', 'o', 'n', 'S', 'c', 'r', 'i', 'p', 't', 'i', 'n', 'g', 0,
    's', 'e', 't', 'P', 'o', 'l', 'y', 'n', 'o', 'm', 'O', 'r', 'd', 'e', 'r', 0,
    's', 'e', 't', 'S', 'm', 'o', 'o', 't', 'h', 'P', 'o', 'i', 'n', 't', 's', 0,
    'D', 'i', 'f', 'f', 'e', 'r', 'e', 'n', 't', 'i', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'O', 'u', 't', 'p', 'u', 't', 'P', 'o', 'i', 'n', 't', 's', 0,
    'g', 'e', 'n', 'e', 'r', 'a', 't', 'e', 'F', 'o', 'r', 'm', 'u', 'l', 'a', 0,
    'p', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 'T', 'a', 'b', 'l', 'e', 0,
    's', 'e', 't', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'V', 'a', 'l', 'u', 'e', 0,
    's', 'e', 't', 'Y', 'E', 'r', 'r', 'o', 'r', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    's', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'l', 'd', 'e', 'r', 0,
    's', 'e', 't', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'i', 'n', 'g', 0,
    's', 'e', 't', 'I', 'g', 'n', 'o', 'r', 'e', 'R', 'e', 's', 'i', 'z', 'e', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'F', 'i', 't', 'C', 'u', 'r', 'v', 'e', 's', 0,
    's', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'C', 'o', 'l', 'o', 'r', 0,
    'p', 'l', 'o', 't', 'D', 'e', 's', 'i', 'g', 'n', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'P', 'o', 'p', 'u', 'p', 'M', 'e', 'n', 'u', 0,
    'm', 'i', 'n', 'i', 'm', 'u', 'm', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'Q', 'L', 'i', 's', 't', '<', 'F', 'o', 'l', 'd', 'e', 'r', '*', '>', 0,
    'E', 'x', 'p', 'o', 'n', 'e', 'n', 't', 'i', 'a', 'l', 'F', 'i', 't', 0,
    'F', 'i', 't', ':', ':', 'A', 'l', 'g', 'o', 'r', 'i', 't', 'h', 'm', 0,
    's', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 's', 0,
    's', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'L', 'a', 'y', 'e', 'r', 0,
    's', 'e', 't', 'C', 'a', 'n', 'v', 'a', 's', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'O', 'r', 'i', 'g', 'i', 'n', 'C', 'o', 'o', 'r', 'd', 0,
    'd', 'r', 'a', 'w', 'S', 't', 'a', 'r', 't', 'A', 'r', 'r', 'o', 'w', 0,
    's', 'e', 't', 'C', 'o', 'o', 'r', 'd', 'i', 'n', 'a', 't', 'e', 's', 0,
    's', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'L', 'a', 'b', 'e', 'l', 0,
    'i', 'n', 's', 'e', 'r', 't', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'C', 'a', 'p', 't', 'i', 'o', 'n', 'S', 'p', 'e', 'c', 0,
    'A', 'b', 's', 't', 'r', 'a', 'c', 't', 'A', 's', 'p', 'e', 'c', 't', 0,
    'l', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'F', 'o', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'd', 'r', 'a', 'g', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'a', 'g', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'D', 'e', 'c', 'o', 'n', 'v', 'o', 'l', 'u', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'I', 'n', 'v', 'e', 'r', 's', 'e', 'F', 'F', 'T', 0,
    's', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'S', 'a', 'v', 'i', 't', 'z', 'k', 'y', 'G', 'o', 'l', 'a', 'y', 0,
    'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', 0,
    'P', 'o', 'l', 'y', 'n', 'o', 'm', 'i', 'a', 'l', 'F', 'i', 't', 0,
    'n', 'u', 'm', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'P', 'o', 'i', 's', 's', 'o', 'n', 'E', 'r', 'r', 'o', 'r', 's', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'E', 'r', 'r', 'o', 'r', 's', 0,
    'p', 'l', 'o', 't', 'G', 'r', 'a', 'y', 'S', 'c', 'a', 'l', 'e', 0,
    'a', 'r', 'r', 'a', 'n', 'g', 'e', 'L', 'a', 'y', 'e', 'r', 's', 0,
    's', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'e', 'm', 'e', 'n', 't', 0,
    's', 'e', 't', 'R', 'i', 'g', 'h', 't', 'T', 'i', 't', 'l', 'e', 0,
    'Q', 'w', 't', 'P', 'l', 'o', 't', ':', ':', 'A', 'x', 'i', 's', 0,
    'f', 'i', 'l', 'l', 'A', 'r', 'r', 'o', 'w', 'H', 'e', 'a', 'd', 0,
    's', 'e', 't', 'H', 'e', 'a', 'd', 'L', 'e', 'n', 'g', 't', 'h', 0,
    's', 'e', 't', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'n', 'o', 't', 'i', 'f', 'y', 'C', 'h', 'a', 'n', 'g', 'e', 's', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    'r', 'e', 'p', 'l', 'a', 'c', 'e', 'V', 'a', 'l', 'u', 'e', 's', 0,
    's', 'e', 't', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 'A', 't', 0,
    'c', 'l', 'e', 'a', 'r', 'F', 'o', 'r', 'm', 'u', 'l', 'a', 's', 0,
    'c', 'l', 'e', 'a', 'r', 'V', 'a', 'l', 'i', 'd', 'i', 't', 'y', 0,
    's', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'M', 'o', 'd', 'e', 0,
    'a', 's', 'p', 'e', 'c', 't', 'R', 'e', 'm', 'o', 'v', 'e', 'd', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'd', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'p', 'a', 'l', 'e', 't', 't', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'd', 'e', 's', 't', 'r', 'o', 'y', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    's', 'e', 't', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    's', 'e', 't', 'F', 'r', 'a', 'm', 'e', 'S', 't', 'y', 'l', 'e', 0,
    't', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 'T', 'i', 'm', 'e', 0,
    'd', 'r', 'a', 'g', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'v', 'i', 'e', 'w', 'p', 'o', 'r', 't', 'E', 'v', 'e', 'n', 't', 0,
    'f', 'o', 'c', 'u', 's', 'O', 'u', 't', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'P', 'y', 't', 'h', 'o', 'n', 'S', 'c', 'r', 'i', 'p', 't', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'O', 'f', 'f', 's', 'e', 't', 0,
    'S', 'm', 'o', 'o', 't', 'h', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'M', 'u', 'l', 't', 'i', 'P', 'e', 'a', 'k', 'F', 'i', 't', 0,
    'N', 'o', 'n', 'L', 'i', 'n', 'e', 'a', 'r', 'F', 'i', 't', 0,
    'S', 'i', 'g', 'm', 'o', 'i', 'd', 'a', 'l', 'F', 'i', 't', 0,
    's', 'e', 't', 'T', 'o', 'l', 'e', 'r', 'a', 'n', 'c', 'e', 0,
    's', 'e', 't', 'A', 'l', 'g', 'o', 'r', 'i', 't', 'h', 'm', 0,
    'C', 'u', 's', 't', 'o', 'm', 'E', 'r', 'r', 'o', 'r', 's', 0,
    'r', 'e', 'n', 'a', 'm', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'a', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'l', 'd', 'e', 'r', 0,
    'p', 'l', 'o', 't', 'C', 'o', 'l', 'o', 'r', 'M', 'a', 'p', 0,
    's', 'e', 't', 'C', 'u', 'r', 'v', 'e', 'A', 'x', 'e', 's', 0,
    'e', 'x', 'p', 'o', 'r', 't', 'V', 'e', 'c', 't', 'o', 'r', 0,
    'a', 'd', 'd', 'T', 'i', 'm', 'e', 'S', 't', 'a', 'm', 'p', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'L', 'e', 'g', 'e', 'n', 'd', 0,
    'a', 'd', 'd', 'E', 'r', 'r', 'o', 'r', 'B', 'a', 'r', 's', 0,
    's', 'e', 't', 'Y', 'M', 'i', 'n', 'o', 'r', 'P', 'e', 'n', 0,
    's', 'e', 't', 'Y', 'M', 'a', 'j', 'o', 'r', 'P', 'e', 'n', 0,
    's', 'e', 't', 'X', 'M', 'i', 'n', 'o', 'r', 'P', 'e', 'n', 0,
    's', 'e', 't', 'X', 'M', 'a', 'j', 'o', 'r', 'P', 'e', 'n', 0,
    's', 'e', 't', 'Y', 'Z', 'e', 'r', 'o', 'L', 'i', 'n', 'e', 0,
    's', 'e', 't', 'X', 'Z', 'e', 'r', 'o', 'L', 'i', 'n', 'e', 0,
    's', 'e', 't', 'F', 'i', 'l', 'l', 'S', 't', 'y', 'l', 'e', 0,
    'Q', 'w', 't', 'P', 'l', 'o', 't', 'C', 'u', 'r', 'v', 'e', 0,
    's', 'e', 't', 'F', 'i', 'l', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'H', 'e', 'a', 'd', 'A', 'n', 'g', 'l', 'e', 0,
    'd', 'r', 'a', 'w', 'E', 'n', 'd', 'A', 'r', 'r', 'o', 'w', 0,
    'c', 'o', 'n', 'f', 'i', 'r', 'm', 'C', 'l', 'o', 's', 'e', 0,
    'r', 'e', 'p', 'l', 'a', 'c', 'e', 'T', 'e', 'x', 't', 's', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'c', 'r', 'e', 'a', 't', 'i', 'o', 'n', 'T', 'i', 'm', 'e', 0,
    'l', 'o', 'a', 'd', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'f', 'o', 'c', 'u', 's', 'I', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'C', 'o', 'n', 'v', 'o', 'l', 'u', 't', 'i', 'o', 'n', 0,
    'C', 'o', 'r', 'r', 'e', 'l', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'S', 'a', 'm', 'p', 'l', 'i', 'n', 'g', 0,
    'I', 'n', 't', 'e', 'g', 'r', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'N', 'u', 'm', 'P', 'e', 'a', 'k', 's', 0,
    'G', 'a', 'u', 's', 's', 'A', 'm', 'p', 'F', 'i', 't', 0,
    'T', 'h', 'r', 'e', 'e', 'E', 'x', 'p', 'F', 'i', 't', 0,
    's', 'c', 'a', 'l', 'e', 'E', 'r', 'r', 'o', 'r', 's', 0,
    'p', 'l', 'o', 't', 'C', 'o', 'n', 't', 'o', 'u', 'r', 0,
    'i', 'm', 'p', 'o', 'r', 't', 'I', 'm', 'a', 'g', 'e', 0,
    's', 'e', 't', 'A', 'u', 't', 'o', 'e', 'x', 'e', 'c', 0,
    'a', 'c', 't', 'i', 'v', 'e', 'L', 'a', 'y', 'e', 'r', 0,
    'e', 'x', 'p', 'o', 'r', 't', 'I', 'm', 'a', 'g', 'e', 0,
    'p', 'r', 'i', 'n', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    's', 'e', 't', 'T', 'o', 'p', 'T', 'i', 't', 'l', 'e', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'C', 'u', 'r', 'v', 'e', 0,
    'i', 'n', 's', 'e', 'r', 't', 'C', 'u', 'r', 'v', 'e', 0,
    'G', 'r', 'a', 'p', 'h', ':', ':', 'A', 'x', 'i', 's', 0,
    's', 'e', 't', 'M', 'i', 'n', 'o', 'r', 'P', 'e', 'n', 0,
    's', 'e', 't', 'M', 'a', 'j', 'o', 'r', 'P', 'e', 'n', 0,
    'I', 'm', 'a', 'g', 'e', 'M', 'a', 'r', 'k', 'e', 'r', 0,
    'A', 'r', 'r', 'o', 'w', 'M', 'a', 'r', 'k', 'e', 'r', 0,
    'r', 'e', 'c', 'a', 'l', 'c', 'u', 'l', 'a', 't', 'e', 0,
    's', 'o', 'r', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'e', 'x', 'p', 'o', 'r', 't', 'A', 'S', 'C', 'I', 'I', 0,
    'i', 'm', 'p', 'o', 'r', 't', 'A', 'S', 'C', 'I', 'I', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'L', 'a', 'b', 'e', 'l', 0,
    'a', 's', 'p', 'e', 'c', 't', 'A', 'd', 'd', 'e', 'd', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 'S', 'p', 'e', 'c', 0,
    't', 'a', 'b', 'l', 'e', 't', 'E', 'v', 'e', 'n', 't', 0,
    'a', 'c', 't', 'i', 'o', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'e', 't', 'e', 'r', 'm', 'i', 'n', 'a', 'n', 't', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    '_', '_', 'g', 'e', 't', 'i', 't', 'e', 'm', '_', '_', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'f', 'i', 'n', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'L', 'o', 'r', 'e', 'n', 't', 'z', 'F', 'i', 't', 0,
    'l', 'e', 'g', 'e', 'n', 'd', 'I', 'n', 'f', 'o', 0,
    's', 'h', 'o', 'w', 'L', 'e', 'g', 'e', 'n', 'd', 0,
    'r', 'o', 'o', 't', 'F', 'o', 'l', 'd', 'e', 'r', 0,
    's', 'a', 'v', 'e', 'F', 'o', 'l', 'd', 'e', 'r', 0,
    's', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'M', 'u', 'l', 't', 'i', 'L', 'a', 'y', 'e', 'r', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'A', 'x', 'i', 's', 0,
    's', 'e', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    's', 'e', 't', 'C', 'o', 'l', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'N', 'u', 'm', 'C', 'o', 'l', 's', 0,
    's', 'e', 't', 'N', 'u', 'm', 'R', 'o', 'w', 's', 0,
    'e', 'x', 'e', 'c', 'u', 't', 'e', 'A', 'l', 'l', 0,
    'S', 'c', 'r', 'i', 'p', 't', 'E', 'd', 'i', 't', 0,
    's', 'e', 't', 'V', 'a', 'l', 'u', 'e', 'A', 't', 0,
    'd', 'a', 't', 'e', 'T', 'i', 'm', 'e', 'A', 't', 0,
    's', 'e', 't', 'F', 'o', 'r', 'm', 'u', 'l', 'a', 0,
    's', 'e', 't', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'o', 'd', 'e', 0,
    's', 't', 'a', 't', 'u', 's', 'I', 'n', 'f', 'o', 0,
    's', 'e', 't', 'C', 'o', 'm', 'm', 'e', 'n', 't', 0,
    'f', 'o', 'n', 't', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    's', 'o', 'r', 't', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'e', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'l', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'S', 'p', 'a', 'n', 0,
    'c', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 0,
    's', 'e', 't', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    's', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'c', 'l', 'o', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'r', 'e', 'p', 'e', 'a', 't', 'T', 'i', 'm', 'e', 0,
    'w', 'h', 'e', 'e', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'R', 'o', 'w', 's', 0,
    'i', 'n', 's', 'e', 'r', 't', 'R', 'o', 'w', 's', 0,
    's', 'e', 't', 'C', 'u', 't', 'o', 'f', 'f', 0,
    'B', 'a', 'n', 'd', 'B', 'l', 'o', 'c', 'k', 0,
    'F', 'F', 'T', 'F', 'i', 'l', 't', 'e', 'r', 0,
    's', 'e', 't', 'M', 'e', 't', 'h', 'o', 'd', 0,
    'P', 'l', 'u', 'g', 'i', 'n', 'F', 'i', 't', 0,
    'T', 'w', 'o', 'E', 'x', 'p', 'F', 'i', 't', 0,
    'c', 'h', 'i', 'S', 'q', 'u', 'a', 'r', 'e', 0,
    'n', 'e', 'w', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'n', 'u', 'm', 'L', 'a', 'y', 'e', 'r', 's', 0,
    'p', 'i', 'c', 'k', 'P', 'o', 'i', 'n', 't', 0,
    's', 'e', 't', 'Y', 'T', 'i', 't', 'l', 'e', 0,
    's', 'e', 't', 'X', 'T', 'i', 't', 'l', 'e', 0,
    's', 'e', 't', 'L', 'e', 'g', 'e', 'n', 'd', 0,
    'n', 'e', 'w', 'L', 'e', 'g', 'e', 'n', 'd', 0,
    's', 'h', 'o', 'w', 'C', 'u', 'r', 'v', 'e', 0,
    'n', 'u', 'm', 'C', 'u', 'r', 'v', 'e', 's', 0,
    'p', 'i', 'e', 'L', 'e', 'g', 'e', 'n', 'd', 0,
    'i', 's', 'P', 'i', 'e', 'P', 'l', 'o', 't', 0,
    'y', 'M', 'i', 'n', 'o', 'r', 'P', 'e', 'n', 0,
    'y', 'M', 'a', 'j', 'o', 'r', 'P', 'e', 'n', 0,
    'x', 'M', 'i', 'n', 'o', 'r', 'P', 'e', 'n', 0,
    'x', 'M', 'a', 'j', 'o', 'r', 'P', 'e', 'n', 0,
    'y', 'Z', 'e', 'r', 'o', 'L', 'i', 'n', 'e', 0,
    'x', 'Z', 'e', 'r', 'o', 'L', 'i', 'n', 'e', 0,
    's', 'e', 't', 'Y', 'M', 'i', 'n', 'o', 'r', 0,
    's', 'e', 't', 'X', 'M', 'i', 'n', 'o', 'r', 0,
    's', 'e', 't', 'Y', 'M', 'a', 'j', 'o', 'r', 0,
    's', 'e', 't', 'X', 'M', 'a', 'j', 'o', 'r', 0,
    's', 'e', 't', 'S', 'y', 'm', 'b', 'o', 'l', 0,
    'm', 'a', 'x', 'Y', 'V', 'a', 'l', 'u', 'e', 0,
    'm', 'i', 'n', 'Y', 'V', 'a', 'l', 'u', 'e', 0,
    'm', 'a', 'x', 'X', 'V', 'a', 'l', 'u', 'e', 0,
    'm', 'i', 'n', 'X', 'V', 'a', 'l', 'u', 'e', 0,
    'R', 'T', 'r', 'i', 'a', 'n', 'g', 'l', 'e', 0,
    'L', 'T', 'r', 'i', 'a', 'n', 'g', 'l', 'e', 0,
    'U', 'T', 'r', 'i', 'a', 'n', 'g', 'l', 'e', 0,
    'D', 'T', 'r', 'i', 'a', 'n', 'g', 'l', 'e', 0,
    'Q', 'w', 't', 'S', 'y', 'm', 'b', 'o', 'l', 0,
    'M', 'D', 'I', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    's', 'e', 't', 'T', 'i', 'm', 'e', 'A', 't', 0,
    's', 'e', 't', 'D', 'a', 't', 'e', 'A', 't', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'A', 't', 0,
    'i', 's', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 0,
    'n', 'o', 'r', 'm', 'a', 'l', 'i', 'z', 'e', 0,
    's', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    's', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'm', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'h', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'i', 'd', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'o', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    't', 'r', 'a', 'n', 's', 'p', 'o', 's', 'e', 0,
    'r', 'e', 'c', 'e', 'i', 'v', 'e', 'r', 's', 0,
    'B', 'a', 'n', 'd', 'P', 'a', 's', 's', 0,
    'H', 'i', 'g', 'h', 'P', 'a', 's', 's', 0,
    'G', 'a', 'u', 's', 's', 'F', 'i', 't', 0,
    'n', 'u', 'm', 'P', 'e', 'a', 'k', 's', 0,
    'n', 'e', 'w', 'G', 'r', 'a', 'p', 'h', 0,
    'n', 'e', 'w', 'T', 'a', 'b', 'l', 'e', 0,
    'a', 'u', 't', 'o', 'e', 'x', 'e', 'c', 0,
    'a', 'd', 'd', 'L', 'a', 'y', 'e', 'r', 0,
    'a', 'd', 'd', 'I', 'm', 'a', 'g', 'e', 0,
    'a', 'd', 'd', 'A', 'r', 'r', 'o', 'w', 0,
    's', 'e', 't', 'M', 'i', 'n', 'o', 'r', 0,
    's', 'e', 't', 'M', 'a', 'j', 'o', 'r', 0,
    's', 'e', 't', 'Y', 'A', 'x', 'i', 's', 0,
    's', 'e', 't', 'X', 'A', 'x', 'i', 's', 0,
    'd', 'a', 't', 'a', 'S', 'i', 'z', 'e', 0,
    'S', 't', 'y', 'l', 'e', 'C', 'n', 't', 0,
    'N', 'o', 'S', 'y', 'm', 'b', 'o', 'l', 0,
    'M', 'y', 'W', 'i', 'd', 'g', 'e', 't', 0,
    'e', 'v', 'a', 'l', 'u', 'a', 't', 'e', 0,
    'a', 'd', 'd', 'C', 'h', 'i', 'l', 'd', 0,
    's', 'h', 'o', 'w', 'G', 'r', 'i', 'd', 0,
    's', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    's', 'e', 't', 'B', 'r', 'u', 's', 'h', 0,
    's', 'e', 't', 'S', 'c', 'a', 'l', 'e', 0,
    's', 'e', 't', 'S', 't', 'a', 'r', 't', 0,
    's', 'e', 't', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    's', 'e', 't', 'F', 'r', 'a', 'm', 'e', 0,
    's', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    's', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'r', 'o', 'w', 'C', 'o', 'u', 'n', 't', 0,
    'f', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'f', 'o', 'l', 'd', 'e', 'r', 's', 0,
    's', 'e', 't', 'B', 'a', 'n', 'd', 0,
    'L', 'o', 'w', 'P', 'a', 's', 's', 0,
    'A', 'v', 'e', 'r', 'a', 'g', 'e', 0,
    'L', 'o', 'r', 'e', 'n', 't', 'z', 0,
    'r', 'S', 'q', 'u', 'a', 'r', 'e', 0,
    'r', 'e', 's', 'u', 'l', 't', 's', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 's', 0,
    'n', 'e', 'w', 'N', 'o', 't', 'e', 0,
    's', 'e', 't', 'R', 'o', 'w', 's', 0,
    's', 'e', 't', 'C', 'o', 'l', 's', 0,
    'a', 'x', 'i', 's', 'C', 'n', 't', 0,
    'x', 'B', 'o', 't', 't', 'o', 'm', 0,
    'Q', 'w', 't', 'P', 'l', 'o', 't', 0,
    'H', 'e', 'x', 'a', 'g', 'o', 'n', 0,
    'D', 'i', 'a', 'm', 'o', 'n', 'd', 0,
    'c', 'o', 'l', 'N', 'a', 'm', 'e', 0,
    'v', 'a', 'l', 'u', 'e', 'A', 't', 0,
    'f', 'o', 'r', 'm', 'u', 'l', 'a', 0,
    'n', 'u', 'm', 'C', 'o', 'l', 's', 0,
    's', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'n', 'u', 'm', 'R', 'o', 'w', 's', 0,
    'E', 'l', 'l', 'i', 'p', 's', 'e', 0,
    'd', 'e', 'v', 'T', 'y', 'p', 'e', 0,
    'r', 'o', 'w', 'S', 'p', 'a', 'n', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'F', 'o', 'n', 't', 0,
    'c', 'o', 'm', 'm', 'e', 'n', 't', 0,
    'e', 'x', 'e', 'c', 'u', 't', 'e', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    's', 'e', 't', 'C', 'e', 'l', 'l', 0,
    's', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'e', 'r', 'r', 'o', 'r', 's', 0,
    'c', 'a', 'n', 'v', 'a', 's', 0,
    'e', 'x', 'p', 'o', 'r', 't', 0,
    'r', 'e', 'p', 'l', 'o', 't', 0,
    'l', 'e', 'g', 'e', 'n', 'd', 0,
    'c', 'u', 'r', 'v', 'e', 's', 0,
    'y', 'M', 'i', 'n', 'o', 'r', 0,
    'x', 'M', 'i', 'n', 'o', 'r', 0,
    'y', 'M', 'a', 'j', 'o', 'r', 0,
    'x', 'M', 'a', 'j', 'o', 'r', 0,
    'y', 'R', 'i', 'g', 'h', 't', 0,
    'X', 'C', 'r', 'o', 's', 's', 0,
    's', 'e', 't', 'E', 'n', 'd', 0,
    'f', 'o', 'l', 'd', 'e', 'r', 0,
    't', 'i', 'm', 'e', 'A', 't', 0,
    'd', 'a', 't', 'e', 'A', 't', 0,
    't', 'e', 'x', 't', 'A', 't', 0,
    'i', 'n', 'v', 'e', 'r', 't', 0,
    'm', 'e', 't', 'r', 'i', 'c', 0,
    'l', 'a', 'y', 'e', 'r', 's', 0,
    's', 'e', 't', 'P', 'e', 'n', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 0,
    'y', 'S', 't', 'a', 'r', 't', 0,
    'x', 'S', 't', 'a', 'r', 't', 0,
    'm', 'a', 't', 'r', 'i', 'x', 0,
    'o', 'p', 't', 'i', 'o', 'n', 0,
    'w', 'i', 'd', 'g', 'e', 't', 0,
    's', 'e', 'n', 'd', 'e', 'r', 0,
    's', 'y', 's', 't', 'e', 'm', 0,
    's', 'y', 'm', 'b', 'o', 'l', 0,
    'L', 'i', 'n', 'e', 'a', 'r', 0,
    'm', 'e', 't', 'h', 'o', 'd', 0,
    's', 'e', 't', 'R', 'o', 'w', 0,
    'r', 'e', 's', 'u', 'l', 't', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'o', 'f', 'f', 's', 'e', 't', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    'A', 'k', 'i', 'm', 'a', 0,
    'C', 'u', 'b', 'i', 'c', 0,
    'G', 'a', 'u', 's', 's', 0,
    'g', 'r', 'a', 'p', 'h', 0,
    't', 'a', 'b', 'l', 'e', 0,
    'l', 'a', 'y', 'e', 'r', 0,
    'y', 'L', 'e', 'f', 't', 0,
    'y', 'A', 'x', 'i', 's', 0,
    'x', 'A', 'x', 'i', 's', 0,
    'S', 't', 'a', 'r', '2', 0,
    'S', 't', 'a', 'r', '1', 0,
    'p', 'r', 'i', 'n', 't', 0,
    'c', 'l', 'o', 'n', 'e', 0,
    'V', 'L', 'i', 'n', 'e', 0,
    'H', 'L', 'i', 'n', 'e', 0,
    'b', 'r', 'u', 's', 'h', 0,
    'c', 'u', 'r', 'v', 'e', 0,
    's', 't', 'y', 'l', 'e', 0,
    'c', 'l', 'e', 'a', 'r', 0,
    'i', 'n', 'd', 'e', 'x', 0,
    'w', 'r', 'i', 't', 'e', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'n', 'o', 't', 'e', 0,
    'g', 'r', 'i', 'd', 0,
    'x', 'T', 'o', 'p', 0,
    'y', 'E', 'n', 'd', 0,
    'x', 'E', 'n', 'd', 0,
    'B', 'o', 't', 'h', 0,
    'i', 'c', 'o', 'n', 0,
    's', 'a', 'v', 'e', 0,
    'R', 'e', 'c', 't', 0,
    't', 'e', 'x', 't', 0,
    'l', 'o', 'a', 'd', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    'e', 'x', 'i', 't', 0,
    'c', 'e', 'l', 'l', 0,
    's', 'o', 'r', 't', 0,
    'p', 'a', 't', 'h', 0,
    'c', 'o', 'p', 'y', 0,
    'f', 'i', 't', 0,
    'p', 'e', 'n', 0,
    'r', 'u', 'n', 0,
    'q', 't', 'i', 0,
};
#line 1440 "src/scripting/qti.sip"
ApplicationWindow *sipscidavis_app()
{
  int iserr = 0;
  PyObject *me = PyImport_ImportModule("scidavis");
  PyObject *mydict = PyModule_GetDict(me);
  PyObject *pyapp = PyDict_GetItemString(mydict,"app");
  Py_DECREF(me);
  if (sipCanConvertToInstance(pyapp, sipClass_ApplicationWindow, SIP_NOT_NONE))
    return (ApplicationWindow*) sipConvertToInstance(pyapp, sipClass_ApplicationWindow, NULL, SIP_NOT_NONE, NULL, &iserr);
  else
    return NULL;
}
#line 582 "./sipqticmodule.cpp"

bool sipVH_qti_43(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::QString sipVH_qti_42(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QString, &sipRes);

    return sipRes;
}

 ::QMenu* sipVH_qti_41(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QMenu* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QMenu, &sipRes);

    return sipRes;
}

 ::QwtSymbol* sipVH_qti_40(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QwtSymbol* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QwtSymbol, &sipRes);

    return sipRes;
}

void sipVH_qti_39(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0,int a1)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "ii", a0, a1);
}

void sipVH_qti_38(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

void sipVH_qti_37(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QFont& a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::QFont(a0), sipType_QFont, SIP_NULLPTR);
}

void sipVH_qti_36(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QPalette& a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::QPalette(a0), sipType_QPalette, SIP_NULLPTR);
}

bool sipVH_qti_35(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "b", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::QVariant sipVH_qti_34(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::Qt::InputMethodQuery a0)
{
     ::QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", a0, sipType_Qt_InputMethodQuery);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

void sipVH_qti_33(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QInputMethodEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QInputMethodEvent, SIP_NULLPTR);
}

void sipVH_qti_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QHideEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QHideEvent, SIP_NULLPTR);
}

void sipVH_qti_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QShowEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QShowEvent, SIP_NULLPTR);
}

void sipVH_qti_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDropEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDropEvent, SIP_NULLPTR);
}

void sipVH_qti_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragLeaveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragLeaveEvent, SIP_NULLPTR);
}

void sipVH_qti_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragMoveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragMoveEvent, SIP_NULLPTR);
}

void sipVH_qti_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragEnterEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragEnterEvent, SIP_NULLPTR);
}

void sipVH_qti_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QActionEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QActionEvent, SIP_NULLPTR);
}

void sipVH_qti_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QTabletEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QTabletEvent, SIP_NULLPTR);
}

void sipVH_qti_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QContextMenuEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QContextMenuEvent, SIP_NULLPTR);
}

void sipVH_qti_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QCloseEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QCloseEvent, SIP_NULLPTR);
}

void sipVH_qti_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QResizeEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QResizeEvent, SIP_NULLPTR);
}

void sipVH_qti_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QMoveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QMoveEvent, SIP_NULLPTR);
}

void sipVH_qti_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPaintEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QPaintEvent, SIP_NULLPTR);
}

void sipVH_qti_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QFocusEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QFocusEvent, SIP_NULLPTR);
}

void sipVH_qti_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QKeyEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QKeyEvent, SIP_NULLPTR);
}

void sipVH_qti_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QWheelEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QWheelEvent, SIP_NULLPTR);
}

void sipVH_qti_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QMouseEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QMouseEvent, SIP_NULLPTR);
}

int sipVH_qti_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::QSize sipVH_qti_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QSize, &sipRes);

    return sipRes;
}

void sipVH_qti_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "b", a0);
}

int sipVH_qti_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::QPaintEngine* sipVH_qti_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QPaintEngine* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QPaintEngine, &sipRes);

    return sipRes;
}

int sipVH_qti_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPaintDevice::PaintDeviceMetric a0)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", a0, sipType_QPaintDevice_PaintDeviceMetric);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::QVariant sipVH_qti_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0,const  ::QUrl& a1)
{
     ::QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iN", a0, new  ::QUrl(a1), sipType_QUrl, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

 ::QMimeData* sipVH_qti_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QMimeData* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_QMimeData, &sipRes);

    return sipRes;
}

bool sipVH_qti_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QMimeData*a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::QMimeData *>(a0), sipType_QMimeData, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_qti_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QMimeData*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::QMimeData *>(a0), sipType_QMimeData, SIP_NULLPTR);
}

bool sipVH_qti_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", a0, sipType_QEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_qti_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QObject*a0, ::QEvent*a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", a0, sipType_QObject, SIP_NULLPTR, a1, sipType_QEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_qti_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QTimerEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QTimerEvent, SIP_NULLPTR);
}

void sipVH_qti_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QChildEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QChildEvent, SIP_NULLPTR);
}

void sipVH_qti_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QEvent, SIP_NULLPTR);
}

void sipVH_qti_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const char*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "S", a0);
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_ApplicationWindow(void **);}
static const sipTypeDef *sipSubClass_ApplicationWindow(void **sipCppRet)
{
     ::QObject *sipCpp = reinterpret_cast< ::QObject *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 1165 "src/scripting/qti.sip"
// we have to do this to override casting in qt/qobject.sip
// without this, app.windows() returns Tables as QWidgets (strangely, Notes
// are returned correctly in any case)
sipType = sipFindType(sipCpp->metaObject()->className());
#line 897 "./sipqticmodule.cpp"

    return sipType;
}
static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_FFTFilter__FilterType, {0}, 0}, sipNameNr_FilterType, 10, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_SmoothFilter__SmoothMethod, {0}, 0}, sipNameNr_SmoothMethod, 53, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_Interpolation__InterpolationMethod, {0}, 0}, sipNameNr_InterpolationMethod, 25, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_Integration__InterpolationMethod, {0}, 0}, sipNameNr_InterpolationMethod, 23, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_MultiPeakFit__PeakProfile, {0}, 0}, sipNameNr_PeakProfile, 32, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_Fit__ErrorSource, {0}, 0}, sipNameNr_ErrorSource, 13, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_Fit__Algorithm, {0}, 0}, sipNameNr_Algorithm, 13, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_Graph__Axis, {0}, 0}, sipNameNr_Axis, 19, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QwtPlot__Axis, {0}, 0}, sipNameNr_Axis, 46, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QwtSymbol__Style, {0}, 0}, sipNameNr_Style, 49, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_MyWidget__CaptionPolicy, {0}, 0}, sipNameNr_CaptionPolicy, 34, SIP_NULLPTR},
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes_qti[] = {
    &sipTypeDef_qti_AbstractAspect.ctd_base,
    &sipTypeDef_qti_ApplicationWindow.ctd_base,
    &sipTypeDef_qti_ArrowMarker.ctd_base,
    &sipTypeDef_qti_Column.ctd_base,
    &sipTypeDef_qti_Convolution.ctd_base,
    &sipTypeDef_qti_Correlation.ctd_base,
    &sipTypeDef_qti_Deconvolution.ctd_base,
    &sipTypeDef_qti_Differentiation.ctd_base,
    &sipTypeDef_qti_ExponentialFit.ctd_base,
    &sipTypeDef_qti_FFT.ctd_base,
    &sipTypeDef_qti_FFTFilter.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef_qti_Filter.ctd_base,
    &sipTypeDef_qti_Fit.ctd_base,
    &enumTypes[6].etd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef_qti_Folder.ctd_base,
    &sipTypeDef_qti_GaussAmpFit.ctd_base,
    &sipTypeDef_qti_GaussFit.ctd_base,
    &sipTypeDef_qti_Graph.ctd_base,
    &enumTypes[7].etd_base,
    &sipTypeDef_qti_Grid.ctd_base,
    &sipTypeDef_qti_ImageMarker.ctd_base,
    &sipTypeDef_qti_Integration.ctd_base,
    &enumTypes[3].etd_base,
    &sipTypeDef_qti_Interpolation.ctd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef_qti_Legend.ctd_base,
    &sipTypeDef_qti_LinearFit.ctd_base,
    &sipTypeDef_qti_LorentzFit.ctd_base,
    &sipTypeDef_qti_Matrix.ctd_base,
    &sipTypeDef_qti_MultiLayer.ctd_base,
    &sipTypeDef_qti_MultiPeakFit.ctd_base,
    &enumTypes[4].etd_base,
    &sipTypeDef_qti_MyWidget.ctd_base,
    &enumTypes[10].etd_base,
    &sipTypeDef_qti_NonLinearFit.ctd_base,
    &sipTypeDef_qti_Note.ctd_base,
    &sipTypeDef_qti_PluginFit.ctd_base,
    &sipTypeDef_qti_PolynomialFit.ctd_base,
    &sipTypeDef_qti_PythonScript.ctd_base,
    &sipTypeDef_qti_PythonScripting.ctd_base,
    &sipTypeDef_qti_QList_0101Folder.mtd_base,
    &sipTypeDef_qti_QList_0101MyWidget.mtd_base,
    &sipTypeDef_qti_QList_0100QDateTime.mtd_base,
    &sipTypeDef_qti_QList_0101QwtPlotCurve.mtd_base,
    &sipTypeDef_qti_QwtPlot.ctd_base,
    &enumTypes[8].etd_base,
    &sipTypeDef_qti_QwtPlotCurve.ctd_base,
    &sipTypeDef_qti_QwtSymbol.ctd_base,
    &enumTypes[9].etd_base,
    &sipTypeDef_qti_ScriptEdit.ctd_base,
    &sipTypeDef_qti_SigmoidalFit.ctd_base,
    &sipTypeDef_qti_SmoothFilter.ctd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef_qti_Table.ctd_base,
    &sipTypeDef_qti_ThreeExpFit.ctd_base,
    &sipTypeDef_qti_TwoExpFit.ctd_base,
};


/* This defines the types that this module needs to import from QtCore. */
sipImportedTypeDef sipImportedTypes_qti_QtCore[] = {
    {"QChildEvent"},
    {"QDate"},
    {"QDateTime"},
    {"QEvent"},
    {"QMimeData"},
    {"QObject"},
    {"QPointF"},
    {"QSize"},
    {"QString"},
    {"QStringList"},
    {"QTime"},
    {"QTimerEvent"},
    {"QUrl"},
    {"QVariant"},
    {"QVector<qreal>"},
    {"Qt::BrushStyle"},
    {"Qt::InputMethodQuery"},
    {"Qt::PenStyle"},
    {SIP_NULLPTR}
};


/* This defines the types that this module needs to import from QtGui. */
sipImportedTypeDef sipImportedTypes_qti_QtGui[] = {
    {"QAbstractScrollArea"},
    {"QActionEvent"},
    {"QBrush"},
    {"QCloseEvent"},
    {"QColor"},
    {"QContextMenuEvent"},
    {"QDragEnterEvent"},
    {"QDragLeaveEvent"},
    {"QDragMoveEvent"},
    {"QDropEvent"},
    {"QFocusEvent"},
    {"QFont"},
    {"QFrame"},
    {"QHideEvent"},
    {"QIcon"},
    {"QInputMethodEvent"},
    {"QKeyEvent"},
    {"QList<QWidget*>"},
    {"QMainWindow"},
    {"QMdiSubWindow"},
    {"QMenu"},
    {"QMouseEvent"},
    {"QMoveEvent"},
    {"QPaintDevice"},
    {"QPaintDevice::PaintDeviceMetric"},
    {"QPaintEngine"},
    {"QPaintEvent"},
    {"QPalette"},
    {"QPen"},
    {"QPrinter::PageSize"},
    {"QResizeEvent"},
    {"QShowEvent"},
    {"QTabletEvent"},
    {"QTextEdit"},
    {"QWheelEvent"},
    {"QWidget"},
    {SIP_NULLPTR}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt4.QtCore", sipImportedTypes_qti_QtCore, SIP_NULLPTR, SIP_NULLPTR},
    {"PyQt4.QtGui", sipImportedTypes_qti_QtGui, SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_ApplicationWindow, {5, 0, 0}, SIP_NULLPTR},
    {SIP_NULLPTR, {0, 0, 0}, SIP_NULLPTR}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_qti = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_qti,
    0,
    sipStrings_qti,
    importsTable,
    SIP_NULLPTR,
    58,
    sipExportedTypes_qti,
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR,
    convertorsTable,
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_qti;

sip_qt_metaobject_func sip_qti_qt_metaobject;
sip_qt_metacall_func sip_qti_qt_metacall;
sip_qt_metacast_func sip_qti_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_qti
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initqti
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "qti",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_qti, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_qti), sip_methods);
#endif

    if (sipModule == SIP_NULLPTR)
        SIP_MODULE_RETURN(SIP_NULLPTR);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule("PyQt4.sip");
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>("PyQt4.sip"));
#endif

    if (sip_sipmod == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == SIP_NULLPTR || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_qti = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "PyQt4.sip._C_API"));
#else
    sipAPI_qti = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_qti == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_qti,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    sip_qti_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_qti_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_qti_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_qti_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_qti,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    SIP_MODULE_RETURN(sipModule);
}
